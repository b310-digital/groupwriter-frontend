services:
  editor:
    build:
      context: .
      target: development
    tty: true
    stdin_open: true
    environment:
      BINDING: "0.0.0.0"
      VITE_HOCUSPOCUS_SERVER_URL: "http://localhost:5173/backend"
      TESTING_PLAYWRIGHT_WS_ENDPOINT: "ws://playwright:9323"
      TESTING_PLAYWRIGHT_BASE_URL: "http://editor:5173"
    ports:
      - "${APP_FRONTEND_PORT:-5173}:5173"
      # preview
      - "4173:4173"
    volumes:
      - .:/home/node/app
      #- app_editor_node_modules:/home/node/app
  backend:
    build:
      context: ../groupwriter-backend
      target: development
    container_name: backend
    tty: true
    stdin_open: true
    environment:
      DATABASE_URL: postgresql://groupwriter-user:groupwriter-password@postgres/groupwriter-backend-dev
      PORT: 3000
      OBJECT_STORAGE_BUCKET: groupwriter
      OBJECT_STORAGE_SCHEME: "http://"
      OBJECT_STORAGE_HOST: minio
      OBJECT_STORAGE_PORT: 9000
      OBJECT_STORAGE_REGION: local
      OBJECT_STORAGE_USER: ${DOCKER_COMPOSE_APP_OBJECT_STORAGE_USER}
      OBJECT_STORAGE_PASSWORD: ${DOCKER_COMPOSE_APP_OBJECT_STORAGE_PASSWORD}
      VAULT_ENCRYPTION_KEY_BASE64: ${DOCKER_COMPOSE_APP_VAULT_ENCRYPTION_KEY_BASE64}
      FEATURE_REMOVE_DOCUMENTS_TOGGLE: ${DOCKER_COMPOSE_APP_FEATURE_REMOVE_DOCUMENTS_TOGGLE:-true}
      FEATURE_REMOVE_DOCUMENTS_MAX_AGE_IN_DAYS: ${DOCKER_COMPOSE_APP_FEATURE_REMOVE_DOCUMENTS_MAX_AGE_IN_DAYS:-730}
    ports:
      - "3000:3000"
    volumes:
      - ../groupwriter-backend:/home/node/app
      #- app_backend_node_modules:/home/node/app/node_modules
    restart: always
  postgres:
    image: postgres:15-alpine
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: ${POSTGRES_DB:-groupwriter-backend-dev}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-groupwriter-password}
      POSTGRES_USER: ${POSTGRES_USER:-groupwriter-user}

    # Exposing the port is not needed unless you want to access this database instance from the host.
    # Be careful when other postgres docker container are running on the same port
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${DOCKER_COMPOSE_MINIO_USER:-ROOTNAME}
      MINIO_ROOT_PASSWORD: ${DOCKER_COMPOSE_MINIO_PASSWORD:-CHANGEME123}
    volumes:
      - ~/minio/data:/data
    command: server /data --console-address ":9001"
  playwright:
    image: mcr.microsoft.com/playwright:v1.55.1-noble
    container_name: playwright
    depends_on:
      - editor
    expose:
      - "9323"
    command: ["npx", "playwright", "run-server", "--port=9323"]

volumes:
  postgres_data:
  app_editor_node_modules:
  app_backend_node_modules: